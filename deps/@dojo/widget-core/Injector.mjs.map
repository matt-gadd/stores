{"version":3,"file":"Injector.mjs","sourceRoot":"","sources":["../../src/Injector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAO7C,MAAM,eAAyB,SAAQ,OAAyB;IAG/D,YAAY,OAAU;QACrB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,GAAG;QACT,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,GAAG,CAAC,OAAU;QACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;IACnC,CAAC;CACD;AAED,eAAe,QAAQ,CAAC","sourcesContent":["import { Evented } from '@dojo/core/Evented';\nimport { EventObject } from '@dojo/core/interfaces';\n\nexport interface InjectorEventMap {\n\tinvalidate: EventObject<'invalidate'>;\n}\n\nexport class Injector<T = any> extends Evented<InjectorEventMap> {\n\tprivate _payload: T;\n\n\tconstructor(payload: T) {\n\t\tsuper();\n\t\tthis._payload = payload;\n\t}\n\n\tpublic get(): T {\n\t\treturn this._payload;\n\t}\n\n\tpublic set(payload: T): void {\n\t\tthis._payload = payload;\n\t\tthis.emit({ type: 'invalidate' });\n\t}\n}\n\nexport default Injector;\n"]}