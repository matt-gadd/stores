{"version":3,"file":"WidgetBase.mjs","sourceRoot":"","sources":["../../src/WidgetBase.ts"],"names":[],"mappings":"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","sourcesContent":["import Map from '@dojo/shim/Map';\nimport WeakMap from '@dojo/shim/WeakMap';\nimport { v } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tCoreProperties,\n\tDiffPropertyReaction,\n\tDNode,\n\tRender,\n\tWidgetMetaBase,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { widgetInstanceMap } from './vdom';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\n\nenum WidgetRenderState {\n\tIDLE = 1,\n\tPROPERTIES,\n\tCHILDREN,\n\tRENDER\n}\n\ninterface ReactionFunctionArguments {\n\tpreviousProperties: any;\n\tnewProperties: any;\n\tchanged: boolean;\n}\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nconst decoratorMap = new Map<Function, Map<string, any[]>>();\nconst boundAuto = auto.bind(null);\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type: symbol = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData>;\n\n\tprivate _renderState: WidgetRenderState = WidgetRenderState.IDLE;\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, WidgetMetaBase>;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = <P>{};\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonElementCreated: (element: HTMLElement, key: string) => {\n\t\t\t\tthis.onElementCreated(element, key);\n\t\t\t},\n\t\t\tonElementUpdated: (element: HTMLElement, key: string) => {\n\t\t\t\tthis.onElementUpdated(element, key);\n\t\t\t},\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis._destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\tregistry: () => {\n\t\t\t\treturn this.registry;\n\t\t\t},\n\t\t\tcoreProperties: {} as CoreProperties,\n\t\t\tinvalidate: this._boundInvalidate\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends WidgetMetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, WidgetMetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node is created for a VNode.\n\t * Override this method to access the dom nodes that were inserted into the dom.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementCreated(element: Element, key: string | number): void {\n\t\t// Do nothing by default.\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node that is associated with a VNode is updated.\n\t * Override this method to access the dom node.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementUpdated(element: Element, key: string | number): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setCoreProperties__(coreProperties: CoreProperties): void {\n\t\tthis._renderState = WidgetRenderState.PROPERTIES;\n\t\tconst { baseRegistry } = coreProperties;\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\n\t\tif (instanceData.coreProperties.baseRegistry !== baseRegistry) {\n\t\t\tif (this._registry === undefined) {\n\t\t\t\tthis._registry = new RegistryHandler();\n\t\t\t\tthis._registry.on('invalidate', this._boundInvalidate);\n\t\t\t}\n\t\t\tthis._registry.base = baseRegistry;\n\t\t\tthis.invalidate();\n\t\t}\n\t\tinstanceData.coreProperties = coreProperties;\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties']): void {\n\t\tthis._renderState = WidgetRenderState.PROPERTIES;\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = this._bindFunctionProperty(\n\t\t\t\t\tproperties[propertyName],\n\t\t\t\t\tinstanceData.coreProperties.bind\n\t\t\t\t);\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tthis._mapDiffPropertyReactions(properties, changedPropertyKeys).forEach((args, reaction) => {\n\t\t\t\t\tif (args.changed) {\n\t\t\t\t\t\treaction.call(this, args.previousProperties, args.newProperties);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = this._bindFunctionProperty(\n\t\t\t\t\t\tproperties[propertyName],\n\t\t\t\t\t\tinstanceData.coreProperties.bind\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t} else {\n\t\t\tthis._renderState = WidgetRenderState.IDLE;\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tthis._renderState = WidgetRenderState.CHILDREN;\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic __render__(): DNode | DNode[] {\n\t\tthis._renderState = WidgetRenderState.RENDER;\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\t\tinstanceData.dirty = false;\n\t\tconst render = this._runBeforeRenders();\n\t\tlet dNode = render();\n\t\tdNode = this.runAfterRenders(dNode);\n\t\tthis._nodeHandler.clear();\n\t\tthis._renderState = WidgetRenderState.IDLE;\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this)!;\n\t\tif (this._renderState === WidgetRenderState.IDLE) {\n\t\t\tinstanceData.dirty = true;\n\t\t\tif (instanceData.parentInvalidate) {\n\t\t\t\tinstanceData.parentInvalidate();\n\t\t\t}\n\t\t} else if (this._renderState === WidgetRenderState.PROPERTIES) {\n\t\t\tinstanceData.dirty = true;\n\t\t} else if (this._renderState === WidgetRenderState.CHILDREN) {\n\t\t\tinstanceData.dirty = true;\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Destroys private resources for WidgetBase\n\t */\n\tprivate _destroy() {\n\t\tif (this._registry) {\n\t\t\tthis._registry.destroy();\n\t\t}\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tmeta.destroy();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet allDecorators = this._decoratorCache.get(decoratorKey);\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\tprivate _mapDiffPropertyReactions(\n\t\tnewProperties: any,\n\t\tchangedPropertyKeys: string[]\n\t): Map<Function, ReactionFunctionArguments> {\n\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\n\t\treturn reactionFunctions.reduce((reactionPropertyMap, { reaction, propertyName }) => {\n\t\t\tlet reactionArguments = reactionPropertyMap.get(reaction);\n\t\t\tif (reactionArguments === undefined) {\n\t\t\t\treactionArguments = {\n\t\t\t\t\tpreviousProperties: {},\n\t\t\t\t\tnewProperties: {},\n\t\t\t\t\tchanged: false\n\t\t\t\t};\n\t\t\t}\n\t\t\treactionArguments.previousProperties[propertyName] = this._properties[propertyName];\n\t\t\treactionArguments.newProperties[propertyName] = newProperties[propertyName];\n\t\t\tif (changedPropertyKeys.indexOf(propertyName) !== -1) {\n\t\t\t\treactionArguments.changed = true;\n\t\t\t}\n\t\t\treactionPropertyMap.set(reaction, reactionArguments);\n\t\t\treturn reactionPropertyMap;\n\t\t}, new Map<Function, ReactionFunctionArguments>());\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && isWidgetBaseConstructor(property) === false) {\n\t\t\tif (this._bindFunctionPropertyMap === undefined) {\n\t\t\t\tthis._bindFunctionPropertyMap = new WeakMap<\n\t\t\t\t\t(...args: any[]) => any,\n\t\t\t\t\t{ boundFunc: (...args: any[]) => any; scope: any }\n\t\t\t\t>();\n\t\t\t}\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\tif (this._registry === undefined) {\n\t\t\tthis._registry = new RegistryHandler();\n\t\t\tthis._registry.on('invalidate', this._boundInvalidate);\n\t\t}\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprotected runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\treturn afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tmeta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n"]}