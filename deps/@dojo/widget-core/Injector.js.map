{"version":3,"file":"Injector.js","sourceRoot":"","sources":["Injector.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,8CAA6C;IAO7C;QAAuC,oCAAyB;QAG/D,kBAAY,OAAU;YAAtB,YACC,iBAAO,SAEP;YADA,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;QACzB,CAAC;QAEM,sBAAG,GAAV;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAEM,sBAAG,GAAV,UAAW,OAAU;YACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;QACnC,CAAC;QACF,eAAC;IAAD,CAAC,AAhBD,CAAuC,iBAAO,GAgB7C;IAhBY,4BAAQ;IAkBrB,kBAAe,QAAQ,CAAC","sourcesContent":["import { Evented } from '@dojo/core/Evented';\nimport { EventObject } from '@dojo/core/interfaces';\n\nexport interface InjectorEventMap {\n\tinvalidate: EventObject<'invalidate'>;\n}\n\nexport class Injector<T = any> extends Evented<InjectorEventMap> {\n\tprivate _payload: T;\n\n\tconstructor(payload: T) {\n\t\tsuper();\n\t\tthis._payload = payload;\n\t}\n\n\tpublic get(): T {\n\t\treturn this._payload;\n\t}\n\n\tpublic set(payload: T): void {\n\t\tthis._payload = payload;\n\t\tthis.emit({ type: 'invalidate' });\n\t}\n}\n\nexport default Injector;\n"]}